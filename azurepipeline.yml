parameters:
  - name: Group_name
    displayName: "Group Name"
    type: string

  - name: Group_Des
    displayName: "Group Description"
    type: string


pool:
  vmImage: 'ubuntu-latest'

trigger: none

variables:
  subscription: user-sp-connection
  resourceGroup: cloud-shell-storage-centralindia
  storageAccount: csg100320004eec02d2
  container: con
  tfstateFile: terraform.tfstate
  anyTfChanges: false
  TF_VAR_GROUP_NAME: '${{ parameters.Group_name }}'
  TF_VAR_GROUP_DESCRIPTION: '${{ parameters.Group_Des }}'

steps:

- task: TerraformInstaller@0
  displayName: install Terraform v0.14.4
  inputs:
    terraformVersion: ' 0.14.4'

- task: TerraformTaskV1@0
  displayName: terraform init
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    backendServiceArm: '$(subscription)'
    backendAzureRmResourceGroupName: '$(resourceGroup)'
    backendAzureRmStorageAccountName: '$(storageAccount)'
    backendAzureRmContainerName: '$(container)'
    backendAzureRmKey: '$(tfstateFile)'

- task: TerraformTaskV1@0
  displayName: terraform plan -out=tfplan
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    commandOptions: '-out=tfplan'
    # commandOptions: '-detailed-exitcode -out=tfplan'
    environmentServiceNameAzureRM: '$(subscription)'

- task: TerraformTaskV1@0
  displayName: terraform apply tfplan
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    commandOptions: 'tfplan'
    environmentServiceNameAzureRM: '$(subscription)'