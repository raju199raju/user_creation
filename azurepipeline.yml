parameters:
  - name: User_First_name
    displayName: "User First Name"
    type: object

  - name: User_last_name
    displayName: "User Last Name"
    type: object


pool:
  vmImage: 'ubuntu-latest'

variables:
  subscription: Visual Studio Professional (060c7910-de04-45a3-9953-ad495ae2be2b)
  resourceGroup: cloud-shell-storage-centralindia
  storageAccount: csg100320004eec02d2
  container: con
  tfstateFile: terraform.tfstate
  anyTfChanges: false
  TF_VAR_UPN: '$(User_First_name)$(User_last_name)@rajurauniyarkumaroutlook.onmicrosoft.com'

steps:

- task: TerraformInstaller@0
  displayName: install Terraform v0.14.4
  inputs:
    terraformVersion: ' 0.14.4'

- task: TerraformTaskV1@0
  displayName: terraform init
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    backendServiceArm: '$(subscription)'
    backendAzureRmResourceGroupName: '$(resourceGroup)'
    backendAzureRmStorageAccountName: '$(storageAccount)'
    backendAzureRmContainerName: '$(container)'
    backendAzureRmKey: '$(tfstateFile)'

- task: TerraformTaskV1@0
  displayName: terraform plan -out=tfplan
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    commandOptions: '-input=false'
    # commandOptions: '-detailed-exitcode -out=tfplan'
    environmentServiceNameAzureRM: '$(subscription)'

#- task: TerraformTaskV1@0
#  displayName: terraform apply tfplan
#  inputs:
#    provider: 'azurerm'
#    command: 'apply'
#    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
#    commandOptions: 'tfplan'
#    environmentServiceNameAzureRM: '$(subscription)'